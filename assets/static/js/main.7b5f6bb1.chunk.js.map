{"version":3,"sources":["tools/url.js","logo.svg","serviceWorker.js","component/Message/index.js","component/MsgContent/index.js","component/SendBox/index.js","component/SigninOrSignup/index.js","SignIn.js","SignUp.js","App.js","index.js"],"names":["module","exports","Host","Version","Message","User","TokenInfo","Login","Boolean","window","location","hostname","match","prop","className","Moment","unix","this","props","msgInfo","sendTime","format","private","senderName","content","React","Component","MsgContent","componentWillMount","timerId","setInterval","Axios","get","Url","headers","localStorage","getItem","params","beginTime","subtract","endTime","beginId","state","lastMsgId","then","res","currLastMsgId","console","log","resMsgList","data","resMsgLen","length","mewMsgList","msgList","forEach","element","push","setState","id","catch","err","componentWillUnmount","clearTimeout","refs","scrollIntoView","behavior","block","ref","map","item","index","key","SendBox","sendMsg","a","async","receiverName","value","status","userList","alert","receiverId","username","undefined","post","logout","removeItem","reload","onClick","userInfo","placeholder","Sign","to","PageSignIn","login","passwd","code","setItem","token","history","JSON","stringify","type","PageSignUp","register","gender","age","interest","msg","App","logged","ReactDOM","render","path","component","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7b5f6bb1.chunk.js","sourcesContent":["module.exports ={\n  // Host:\"http://localhost:8888\",\n  Host:\"\",\n  Version:\"/v1\",\n  Message:\"/message\",\n  User:\"/user\",\n  TokenInfo:\"/token/info\",\n  Login:\"/login\"\n}","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\nimport Moment from \"moment\"\nimport \"./index.css\"\nclass Message extends React.Component{\n  constructor(prop){\n    super(prop)\n  }\n\n  render(){\n    return (\n      <div className=\"message\">\n        <div className=\"message-time\">\n          {Moment.unix(this.props.msgInfo.sendTime).format(\"YYYY-MM-DD HH:mm\")}\n        </div>\n        <div className={this.props.msgInfo.private?\"message-sender private\":\"message-sender\"}>\n          {this.props.msgInfo.senderName} :\n        </div>\n        <div className=\"message-content\">\n          <span className=\"message-content-content\">{this.props.msgInfo.content} </span>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Message","import React from \"react\"\nimport Message from \"../Message\"\nimport Axios from \"axios\"\nimport Moment from \"moment\"\nimport Url from \"../../tools/url\"\nimport \"./index.css\"\nclass MsgContent extends React.Component{\n  constructor(prop){\n    super(prop)\n    this.state={\n      timerId:0,\n      lastMsgId:0,\n      msgList:[]\n    }\n  }\n  componentDidUpdate() {\n    this.refs[\"msg-container\"].scrollIntoView({ \n      behavior: \"smooth\",\n      block:\"end\" \n    });\n  }\n  componentWillMount=()=>{\n    let timerId = setInterval(()=>{\n      Axios.get(`${Url.Host}${Url.Version}${Url.Message}`,{\n        headers:{\n          \"Authorization\":`Bearer ${localStorage.getItem(\"iris-token\")}`\n        },\n        params:{\n          beginTime:Moment().subtract(2, 'days').format(\"X\"),\n          endTime:0,\n          beginId:this.state.lastMsgId\n        }\n      }).then(res=>{\n        // console.log('获取消息成功 => ',res)\n        let currLastMsgId = this.state.lastMsgId\n        console.log(' => ',currLastMsgId)\n        let resMsgList = res.data.data\n        let resMsgLen = resMsgList.length\n        let mewMsgList = [...this.state.msgList]\n        resMsgList.forEach(element => {\n          mewMsgList.push(element)\n        });\n        this.setState({\n          msgList:mewMsgList,\n          lastMsgId:resMsgLen===0?currLastMsgId:resMsgList[resMsgLen-1].id\n        })\n      }).catch(err=>{\n        console.log('获取消息失败 => ',err)\n      })\n    },700)\n\n    this.setState({\n      timerId:timerId\n    })\n    \n  }\n  componentWillUnmount =()=>{\n    clearTimeout(this.state.timerId);\n  }\n  render(){\n    return (\n      <div className=\"msg-container\" ref=\"msg-container\">\n        {this.state.msgList.map((item,index)=>(\n            <Message key={index} msgInfo={item}></Message>\n          )\n        )}\n      </div>\n    )\n  }\n}\n\nexport default MsgContent\n\n","import React from \"react\"\nimport Axios from \"axios\"\nimport Url from \"../../tools/url\"\nimport \"./index.css\"\n\nclass SendBox extends React.Component{\n  constructor(prop){\n    super(prop)\n    console.log(prop)\n  }\n\n  sendMsg = async ()=>{\n    let receiverName = this.refs[\"receiverName\"].value\n    let content = this.refs[\"content\"].value\n    let userList;\n    let receiverId;\n\n    // 获取结接收者列表\n    let res = await Axios.get(`${Url.Host}${Url.Version}${Url.User}`,{\n      headers:{\n        \"Authorization\":`Bearer ${localStorage.getItem(\"iris-token\")}`\n      }\n    })\n    if(res.status === 200){\n      userList = res.data.data\n      console.log(\"获取用户列表成功 => \",userList)\n    }else{\n      alert(\"发送失败：获取用户列表失败。\")\n      return\n    }\n\n    // 获取接受者Id\n    if (receiverName===\"\"){\n      receiverId = 0\n    }else{\n      userList.forEach(item=>{\n        if(item.username===receiverName){\n          receiverId = item.id\n          console.log(\"成功获取接受者信息 => \",item)\n        }\n      })\n    }\n\n    // 发送消息\n    if(receiverId===undefined){\n      alert(`发送失败：无法找到用户名为${receiverName}的接受者`)\n      return\n    }\n    if(content===\"\"){\n      alert(`发送失败：你不能发送空消息`)\n      return\n    }\n\n    console.log(`正在给id为=>${receiverId}的用户发送消息=>${content}`)\n    Axios.post(`${Url.Host}${Url.Version}${Url.Message}`,{\n      receiverId:receiverId,\n      content:content\n    }, {\n      headers:{\n        \"Authorization\":`Bearer ${localStorage.getItem(\"iris-token\")}`\n      }\n    }).then(res=>{\n      console.log('发送成功 => ',res)\n      this.refs[\"content\"].value=\"\"\n    }).catch(err=>{\n      console.log('发送失败 => ',err)\n    })\n  }\n\n  logout =()=>{\n    console.log(\"正在注销用户\")\n    console.log(\"正在清除localStroage\")\n    localStorage.removeItem(\"iris-token\")\n    console.log(\"清除localStroage成功，完成注销\")\n    window.location.reload()\n  }\n  render(){\n    return(\n      <div className=\"sendbox\">\n        <div className=\"sendbox-sendto\">\n          <button className=\"sendbox-sendto-sender\" onClick={this.logout}>{this.props.userInfo.username}</button>\n          <div className=\"sendbox-sendto-charto\">to</div>\n          {/* <div className=\"sendbox-sendto-receiver\">{this.state.receiverName}</div> */}\n          <input className=\"sendbox-sendto-receiver\" placeholder=\"All\" ref=\"receiverName\"/>\n        </div>\n        <div className=\"sendbox-msg\">\n          <input className=\"sendbox-msg-input\" placeholder=\"请输入消息内容\" ref=\"content\"></input>\n          <button className=\"sendbox-msg-button\" onClick={this.sendMsg}>发送</button>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default SendBox","import React from \"react\"\nimport {Link} from \"react-router-dom\"\nimport \"./index.css\"\nclass Sign extends React.Component{\n  constructor(prop){\n    super(prop)\n  }\n  \n  render(){\n    return(\n      <div className=\"sign\">\n        <Link to=\"/signin\">\n          <button className=\"sign-in\">登录</button>\n        </Link>\n        <Link to=\"/signup\">\n          <button className=\"sign-up\">注册</button>\n          </Link>\n      </div>\n    )\n  }\n}\n\nexport default Sign","import React from \"react\"\nimport Axios from \"axios\"\nimport {Link} from \"react-router-dom\"\nimport \"./Sign.css\"\nimport Url from \"./tools/url.js\"\n\nclass PageSignIn extends React.Component{\n  constructor(prop){\n    super(prop)\n  }\n\n  login=()=>{\n    let username = this.refs[\"username\"].value\n    let passwd = this.refs[\"passwd\"].value\n    console.log(username,passwd)\n    Axios.post(`${Url.Host}${Url.Version}${Url.Login}`,{\n      username:username,\n      passwd:passwd\n    }).then(res=>{\n      if(res.data.code === \"200\"){\n        alert(\"登录成功\")\n        console.log('登录成功 => ',res)\n        \n        localStorage.setItem(\"iris-token\",res.data.data.token)\n        console.log('已经将登录获得的token存入localStorage')\n        this.props.history.push(\"\")\n      }else{\n        alert(res.data.code)\n      }\n    }).catch(err=>{\n      alert(`登录失败${JSON.stringify(err)}`)\n      console.log('登录失败 => ',err)\n    })\n  }\n  render(){\n    return(\n      <div className=\"page-sign-in\">\n        <div className=\"page-header\">\n          登录\n        </div>\n        <div className=\"page-content\">\n          <div className=\"input-title\">用户名</div>\n          <input className=\"input-area\" ref=\"username\"></input>\n          <div className=\"input-title\">密码</div>\n          <input className=\"input-area\" ref=\"passwd\" type=\"password\"></input>\n          <div className=\"input-button\">\n            <button className=\"input-button-ok\" onClick={this.login}>登录</button>\n            <Link to=\"/\">\n              <button className=\"input-button-return\">返回</button>\n            </Link>\n          </div>\n        </div>\n        \n      </div>\n    )\n  }\n}\n\nexport default PageSignIn","import React from \"react\"\nimport Axios from 'axios';\nimport Url from \"./tools/url\"\nimport {Link} from 'react-router-dom'\nimport \"./Sign.css\"\n\nclass PageSignUp extends React.Component{\n  constructor(prop){\n    super(prop)\n  }\n  register=()=>{\n    let username = this.refs[\"username\"].value\n    let passwd = this.refs[\"passwd\"].value\n    let gender = this.refs[\"gender\"].value\n    let age = this.refs[\"age\"].value\n    let interest = this.refs[\"interest\"].value\n    Axios.post(`${Url.Host}${Url.Version}${Url.User}`,{\n      username:username,\n      passwd:passwd,\n      gender:gender,\n      age:age,\n      interest:interest\n    }).then(res=>{\n      if(res.data.code == 200){\n        alert(\"注册成功\")\n        console.log('注册成功 => ',res);\n      }else{\n        alert(\"注册失败：\"+res.data.msg)\n      }\n    }).catch(err=>{\n      console.log('注册失败 => ',err);\n    })\n  }\n  render(){\n    return(\n      <div className=\"page-sign-up\">\n        <div className=\"page-header\">\n          注册\n        </div>\n        <div className=\"page-content\">\n          <div className=\"input-title\">用户名</div>\n          <input className=\"input-area\" ref=\"username\"></input>\n          <div className=\"input-title\">密码</div>\n          <input className=\"input-area\" ref=\"passwd\"></input>\n          <div className=\"input-title\">性别</div>\n          <select className=\"input-area\" ref=\"gender\">\n            <option value =\"1\">女</option>\n            <option value =\"2\">男</option>\n          </select>\n          <div className=\"input-title\">年龄</div>\n          <input className=\"input-area\" ref=\"age\"></input>\n          <div className=\"input-title\">兴趣爱好</div>\n          <input className=\"input-area\" ref=\"interest\"></input>\n          <div className=\"input-button\">\n            <button className=\"input-button-ok\" onClick={this.register}>注册</button>\n            <Link to=\"/\"><button className=\"input-button-return\">返回</button></Link>\n          </div>\n        </div>\n        \n      </div>\n    )\n  }\n} \n\nexport default PageSignUp","import React from 'react';\nimport Axios from 'axios'\nimport logo from './logo.svg';\nimport './App.css';\nimport MsgContent from \"./component/MsgContent\"\nimport SendBox from \"./component/SendBox\"\nimport Sign from \"./component/SigninOrSignup\"\nimport PageSignIn from \"./SignIn\"\nimport PageSignUp from \"./SignUp\"\nimport Url from \"./tools/url.js\"\nlet isLogin = false\nclass App extends React.Component{\n  constructor(prop){\n    super(prop)\n    this.state={\n      userInfo:null,\n      logged:false,\n      msgList:[]\n    }\n  }\n  componentWillMount=()=>{\n    console.log(\"componentWillMount\")\n    Axios.get(`${Url.Host}${Url.Version}${Url.TokenInfo}`,{\n      headers:{\n        \"Authorization\":`Bearer ${localStorage.getItem(\"iris-token\")}`\n      }\n    }).then(res=>{\n      console.log('验证登录token成功 =>' ,res)\n      this.setState({\n        logged:true,\n        userInfo:res.data.data\n      })\n    }).catch(err=>{\n      console.log('验证登录token失败 => ',err)\n    })\n  }\n  render(){\n    return (\n      <div className=\"App\">\n        <div className=\"app-header\">\n          在线聊天室\n        </div>\n        <div className=\"app-content\">\n          <MsgContent></MsgContent>\n        </div>\n        <div className=\"app-bottom\">\n          {this.state.logged?(<SendBox userInfo={this.state.userInfo}></SendBox>):(<Sign></Sign>)}\n        </div>\n      </div>\n    );\n  }\n}\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport {BrowserRouter as Router,Switch,Route} from 'react-router-dom';\n\nimport App from './App';\nimport PageSignIn from './SignIn';\nimport PageSignUp from './SignUp';\n\nconst Routes=()=>(\n  <Router>\n    <Switch>\n        <Route path='/signin' component={PageSignIn}/>\n        <Route path='/signup' component={PageSignUp}/>\n        <Route path='/' component={App}/>\n    </Switch>\n  </Router>\n)\n\nReactDOM.render(Routes(), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}